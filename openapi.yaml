openapi: 3.0.0
info:
  version: '2.11'
  title: ADR Marketplace Platform
  description: ADR marketplace management API.
  contact:
    email: technology@alldigitalrewards.com
servers:
  - url: https://admin.stage.alldigitalrewards.com
    description: Staging environment
  - url: https://admin.alldigitalrewards.com
    description: Production environment
tags:
  - name: token
    description: >-
      Generate a JSON Web Token for use in API access.  This token is valid for 2 hours after creation.
  - name: organization
    description: Operations for organization management and review.
  - name: program
    description: Operations for program management and review.
  - name: participant
    description: Operations for participant management and review.
  - name: point adjustment
    description: Credit or Debit Points from Participants.
  - name: SSO
    description: Generate Single Sign On URL for Participants.
  - name: transaction
    description: Operations for transaction management and review.
  - name: webhook
    description: Operations for webhook management and review.
paths:
  /token:
    post:
      tags:
        - token
      summary: Use Basic authentication to generate a new JWT for use in API access
      operationId: generateToken
      security:
        - BasicAuth: [ ]
      responses:
        '200':
          description: JWT is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '401':
          description: Unauthorized Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        default:
          description: Unknown exception
  /api/organization:
    get:
      tags:
        - organization
      summary: Retrieve organization collection with optional filters
      operationId: getOrganizationList
      security:
        - Bearer: [ ]
      description: Returns organization collection.
      parameters:
        - name: parent
          in: query
          required: false
          description: Return all children organizations of this parent unique identifier.
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: Fuzzy match on the name of organization to return.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Request a specific page number starting with page 1.
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: Set the number of desired results per page.
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationList'
        default:
          description: Unknown exception
    post:
      tags:
        - organization
      summary: Add a new organization.
      operationId: addOrganization
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
        description: Organization object to add to the marketplace.
        required: true
      responses:
        '201':
          description: Create a new organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        default:
          description: Unknown exception
  /api/organization/{uniqueId}:
    get:
      tags:
        - organization
      operationId: getOrganization
      security:
        - Bearer: [ ]
      summary: Find a organization by ID
      description: Returns a single organization.
      parameters:
        - name: uniqueId
          in: path
          required: true
          description: The organization domain or id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
    put:
      tags:
        - organization
      summary: Updates a organization.
      operationId: updateOrganization
      security:
        - Bearer: [ ]
      parameters:
        - name: uniqueId
          in: path
          required: true
          description: The organization domain or id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        description: Organization object to add to the marketplace.
        required: true
      responses:
        '200':
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRead'
        default:
          description: Unknown exception
  /api/organization/{orgId}/webhooks:
    get:
      tags:
        - webhook
      operationId: listWebhooks
      security:
        - Bearer: [ ]
      summary: List organization webhooks
      description: Returns a list of configured webhooks
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookRead'
    post:
      tags:
        - webhook
      operationId: createWebhook
      security:
        - Bearer: [ ]
      summary: Create a webhook
      description: Create a webhook.
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreate'
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid properties sent.
  /api/organization/{orgId}/webhooks/{webhookId}:
    get:
      tags:
        - webhook
      operationId: getWebhook
      security:
        - Bearer: [ ]
      summary: Get Webhook
      description: Returns the requested webhook model.
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
        - name: webhookId
          in: path
          required: true
          description: Webhook Unique ID
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRead'
        '404':
          description: Webhook not found.
    put:
      tags:
        - webhook
      operationId: updateWebhook
      security:
        - Bearer: [ ]
      summary: Update a webhook
      description: Update a webhook.
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
        - name: webhookId
          in: path
          required: true
          description: Webhook Unique ID
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreate'
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid properties sent.
        '404':
          description: Webhook not found.
  /api/organization/{orgId}/webhooks/{webhookId}/logs:
    get:
      tags:
        - webhook
      operationId: getWebhookLogs
      security:
        - Bearer: [ ]
      summary: Get Webhook Logs
      description: >-
        Returns the requested webhook webhook logs that match the provided
        criteria. The response is limited to 100 webhooks.  The status_code
        filter only returns the webhooks where the most recent response from the
        configured server matches that HTTP Status code. For example:If you
        filter by status_code=500 and five results are returned and you replay
        the first result which then gets an HTTP Status response of 204 from the
        configured webhook server.  If you filter by status_code=500 again you
        will only get four results at the most recent response for the replayed
        log is now 204 rather than 500.
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
        - name: webhookId
          in: path
          required: true
          description: Webhook Unique ID
          schema:
            type: integer
        - name: status_code
          in: query
          required: false
          description: The HTTP Status code of the last response of any given webhook log.
          schema:
            type: integer
        - name: last_id
          in: query
          required: false
          description: >-
            The document ID (OID) of the last Webhook Log read.  The response
            will start with the next Webhook Log in line
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLogs'
  /api/organization/{orgId}/webhooks/{webhookId}/logs/{webhookLogId}:
    get:
      tags:
        - webhook
      operationId: viewWebhookLog
      security:
        - Bearer: [ ]
      summary: View a single webhook log
      description: View a single webhook log
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
        - name: webhookId
          in: path
          required: true
          description: Webhook Unique ID
          schema:
            type: integer
        - name: webhookLogId
          in: path
          required: true
          description: Webhook Log Document ID
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLog'
  /api/organization/{orgId}/webhooks/{webhookId}/logs/{webhookLogId}/replay:
    post:
      tags:
        - webhook
      operationId: replayWebhookLog
      security:
        - Bearer: [ ]
      summary: Replay Webhook Log
      description: >-
        Replays the Webhook.  This effectly repeats the stored request exactly
        as you see it in the viewWebhook call.  This will store the response and
        return the HTTP Status code the server gave when replaying the webhook.
      parameters:
        - name: orgId
          in: path
          required: true
          description: The organization unique id
          schema:
            type: string
            format: uuid
        - name: webhookId
          in: path
          required: true
          description: Webhook Unique ID
          schema:
            type: integer
        - name: webhookLogId
          in: path
          required: true
          description: Webhook Log Document ID
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookReplayResponse'
  /api/program:
    get:
      tags:
        - program
      summary: Retrieve program collection with optional filters
      operationId: getProgramList
      security:
        - Bearer: [ ]
      description: Returns programr collection.
      parameters:
        - name: organization
          in: query
          required: false
          description: Organization of program to return.
          schema:
            type: integer
            format: int32
        - name: name
          in: query
          required: false
          description: Name of program to return
          schema:
            type: string
        - name: active
          in: query
          required: false
          description: Active/Inactive list of programs to return (1 or 0)
          schema:
            type: integer
        - name: end_date
          in: query
          required: false
          description: Program list where end date (Y-m-d)
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramList'
        default:
          description: Unknown exception
    post:
      tags:
        - program
      summary: Add a new program.
      operationId: addProgram
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramCreate'
        description: Program object to add to the marketplace.
        required: true
      responses:
        '201':
          description: Create a new program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramRead'
        default:
          description: Unknown exception
  /api/program/{uniqueId}:
    get:
      tags:
        - program
      summary: Find a program by ID
      operationId: getProgram
      security:
        - Bearer: [ ]
      description: Returns a single program.
      parameters:
        - name: uniqueId
          in: path
          required: true
          description: The Program Unique Identifier
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramRead'
        default:
          description: unknwon exception
    put:
      tags:
        - program
      summary: Updates a program.
      operationId: updateProgram
      security:
        - Bearer: [ ]
      parameters:
        - name: uniqueId
          in: path
          required: true
          description: The program domain or id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramUpdate'
        description: Program object to add to the marketplace.
        required: true
      responses:
        '200':
          description: Program updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramRead'
        default:
          description: Unknown exception
  /api/program/{uniqueId}/metrics:
    get:
      tags:
        - program
      summary: Fetch basic program metrics
      operationId: getProgramMetrics
      security:
        - Bearer: [ ]
      description: Returns basic program metrics.
      parameters:
        - name: uniqueId
          in: path
          required: true
          description: The Program Unique Identifier
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramMetrics'
        default:
          description: unknwon exception
  /api/program/{programId}/participant:
    get:
      tags:
        - participant
      summary: Retrieve user collection with optional filters
      operationId: getParticipantList
      security:
        - Bearer: [ ]
      description: Returns user collection.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: program
          in: query
          required: false
          description: Program of user to return.
          schema:
            type: integer
            format: int32
        - name: name
          in: query
          required: false
          description: First/last name of user to return.
          schema:
            type: string
        - name: email_address
          in: query
          required: false
          description: Email address of user to return.
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        default:
          description: Unknown exception
    post:
      tags:
        - participant
      summary: Add a new user.
      operationId: addUser
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/UserWrite'
      responses:
        '201':
          description: successful operation
        default:
          description: Unknown exception
  /api/program/{programId}/participant/list:
    post:
      tags:
        - participant
      summary: Bulk Fetch Participants by Unique ID
      operationId: getBulkParticipantList
      security:
        - Bearer: [ ]
      description: Returns participant collection.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantIdArray'
        description: >-
          Array of participant_id to request.  To use this, the request header
          content-type must be application/json
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        default:
          description: Unknown exception
  /api/program/{programId}/participant/{uniqueId}:
    get:
      tags:
        - participant
      summary: Find a user by ID
      operationId: getUser
      security:
        - Bearer: [ ]
      description: Returns a single user.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantRead'
    put:
      tags:
        - participant
      summary: Updates a user.
      operationId: updateUser
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/UserWrite'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantRead'
        default:
          description: Unknown exception
    delete:
      tags:
        - participant
      summary: Delete user by ID setting to inactive
      operationId: deleteUser
      security:
        - Bearer: [ ]
      description: Remove User PII.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: none
  /api/program/{programId}/participant/{uniqueId}/transaction:
    get:
      tags:
        - transaction
      summary: Retrieve list of user transactions
      operationId: getTransactionList
      security:
        - Bearer: [ ]
      description: Returns a transaction collection.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
        - name: unique_id[]
          in: query
          description: An array of one or more transaction unique_id's
          schema:
            type: string
        - name: year
          in: query
          description: Fileter by Year YYYY
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: No transactions found.
    post:
      tags:
        - transaction
      summary: Add a new user transaction.
      operationId: addTransaction
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransaction'
        description: Transaction creation for user.
        required: true
      responses:
        '201':
          description: successful operation
        '400':
          description: >-
            This response will occur with an error message indicating the
            specific issue and reason the transaction is invalid. Some examples
            are.  If product does not exist. If participant does not have enough
            points to transact for the reward and issue_points is not true.  If
            address verification is enabled, a shipping address is provided and
            it is not able to be verified. If the value of a ranged value
            product exceeds the valid range.   If the product is out of
            inventory.
        default:
          description: Unknown exception
  /api/program/{programId}/participant/{uniqueId}/transaction/{transactionId}:
    get:
      tags:
        - transaction
      summary: Retrieve a single transaction
      operationId: getTransaction
      security:
        - Bearer: [ ]
      description: Returns a single transaction.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of the participant the transaction belongs to.
          schema:
            type: string
            format: uuid
        - name: transactionId
          in: path
          required: true
          description: ID of Transaction.
          schema:
            type: integer
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: No transactions found.
  /api/program/{programId}/participant/{uniqueId}/transaction/{transactionId}/meta:
    patch:
      tags:
        - transaction
      summary: Add or Update one or more meta key pair values.
      operationId: patchTransactionMeta
      security:
        - Bearer: [ ]
      description: >-
        Add or Update one or more meta key pair values.  The transactionId
        property in the URL can either be a transaction Item GUID or a
        Transaction ID (integer).  Either will identify the correct transaction
        and add the appropriate metadata.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of the participant the transaction belongs to.
          schema:
            type: string
            format: uuid
        - name: transactionId
          in: path
          required: true
          description: ID of Transaction.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/MetaArray'
      responses:
        '202':
          description: successful operation
        '400':
          description: Resource does not exist
  /api/program/{programId}/participant/{uniqueId}/transaction/{transactionId}/return/{itemGuid}:
    get:
      tags:
        - transaction
      summary: Retrieve a return
      operationId: getReturn
      security:
        - Bearer: [ ]
      description: Returns a return.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of the participant the transaction belongs to.
          schema:
            type: string
            format: uuid
        - name: transactionId
          in: path
          required: true
          description: ID of Transaction.
          schema:
            type: integer
            format: uuid
        - name: itemGuid
          in: path
          required: true
          description: ID of Transaction Item.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnRead'
        '404':
          description: Resource does not exist
  /api/program/{programId}/participant/{uniqueId}/adjustment:
    get:
      tags:
        - point adjustment
      summary: Retrieve list of user transactions
      operationId: getAdjustmentList
      security:
        - Bearer: [ ]
      description: Returns a transaction collection.
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointRead'
    post:
      tags:
        - point adjustment
      summary: Add user point adjustment.
      operationId: addAdjustment
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointWrite'
        description: Adjustment creation for user.
        required: true
      responses:
        '201':
          description: successful operation
        default:
          description: Unknown exception
  /api/program/{programId}/participant/{uniqueId}/adjustment/{adjustmentId}:
    patch:
      tags:
        - point adjustment
      summary: Update an existing point Adjustment
      description: >-
        Update an existing point Adjustment.  No single property in the body is
        required when updating an adjustment.  All properties not listed here
        will be ignored.
      operationId: patchAdjustment
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of participant that owns the adjustment.
          schema:
            type: string
            format: uuid
        - name: adjustmentId
          in: path
          required: true
          description: ID of adjustment.
          schema:
            type: integer
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointUpdate'
        description: Adjustment creation for user.
        required: true
      responses:
        '202':
          description: Successful operation
        '404':
          description: Adjustment not found.
        '500':
          description: Failed to update adjustment
        default:
          description: Unknown exception
  /api/program/{programId}/participant/{uniqueId}/sso:
    post:
      tags:
        - SSO
      summary: Create a Single Sign On token for a participant.
      operationId: generateSSOToken
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: >-
            Unique ID of the participant for which you want to generate an SSO
            token.
          schema:
            type: string
            format: uuid
        - name: lang
          in: query
          required: false
          description: Set the language for the participant logging into the marketplace.
          schema:
            $ref: '#/components/schemas/LanguageEnum'
        - name: country
          in: query
          required: false
          description: Set the country for the participant logging into the marketplace.
          schema:
            $ref: '#/components/schemas/CountryEnum'
        - name: redirect
          in: query
          required: false
          description: >-
            Set the redirect URL for the participant logging into the marketplace.
            The value must be a base64 encoded path. For example, to redirect a participant to the privacy policy (/content/privacy_policy), the query string would be ?redirect=L2NvbnRlbnQvcHJpdmFjeV9wb2xpY3k=
            example: e-gift wallet dashboard (/account/dashboard?tab=egift) ?redirect=L2FjY291bnQvZGFzaGJvYXJkP3RhYj1lZ2lmdA==
          schema:
            type: string
            format: url
      responses:
        '201':
          description: success operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantSSO'
        default:
          description: Unknown exception
    get:
      tags:
        - SSO
      summary: Validate a participant SSO token
      description: Returns a participant object.
      operationId: validateSSOToken
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of participant to return.
          schema:
            type: string
            format: uuid
        - name: token
          in: query
          required: true
          description: Token to validate.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantRead'
  /api/program/{programId}/participant/{uniqueId}/meta:
    put:
      tags:
        - participant
      summary: Replace all participant metadata.
      description: Replace all participant metadata.
      operationId: putParticipantMeta
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/MetaArray'
      responses:
        '200':
          description: successful operation
    patch:
      tags:
        - participant
      summary: Add or Update one or more meta key pair values.
      operationId: patchParticipantMeta
      security:
        - Bearer: [ ]
      parameters:
        - name: programId
          in: path
          required: true
          description: The Program Unique Identifier.
          schema:
            type: string
            format: uuid
        - name: uniqueId
          in: path
          required: true
          description: Unique ID of user to return.
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/MetaArray'
      responses:
        '200':
          description: success operation
  /api/batch/participant:
    post:
      tags:
        - Batch
      summary: Create many participants at once
      operationId: batchParticipant
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchParticipant'
        description: Collection of participant objects to add to the marketplace.
        required: true
      responses:
        '201':
          description: successful operation
        default:
          description: Unknown exception
  /api/batch/adjustment:
    post:
      tags:
        - Batch
      summary: Create many points adjustments at once
      operationId: batchAdjustent
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAdjustment'
        description: Collection of adjustment objects to add to the marketplace.
        required: true
      responses:
        '201':
          description: successful operation
        default:
          description: Unknown exception
  /api/batch/transaction:
    post:
      tags:
        - Batch
      summary: Create many transactions at once
      operationId: batchTransaction
      security:
        - Bearer: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchTransaction'
        description: Collection of transaction objects to add to the marketplace.
        required: true
      responses:
        '201':
          description: successful operation
        default:
          description: Unknown exception
components:
  requestBodies:
    WebhookCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookCreate'
      required: true
    MetaArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Meta'
      description: Meta
      required: true
    UserWrite:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserWrite'
      description: User object to add to the marketplace.
      required: true
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    Bearer:
      description: >-
        For accessing the API, a valid JSON Web Token must be passed in all
        queries via the "Authorization" header. You may request a new JSON Web
        token at the following endpoint: /token, with the API User and Password
        credentials for the organization you are actioning.
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    JwtResponse:
      type: object
      properties:
        token:
          type: string
        expiration:
          type: integer
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    UserList:
      type: object
      properties:
        email_address:
          type: string
        unique_id:
          type: string
          format: uuid
        credit:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        active:
          type: integer
          format: int32
          description: User Status
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        created_at:
          type: string
        updated_at:
          type: string
        deactivated_at:
          type: string
        program:
          description: the assigend program
          type: string
          format: uuid
        organization:
          description: the assigend organization
          type: string
          format: uuid
    UserWrite:
      type: object
      properties:
        email_address:
          type: string
        unique_id:
          type: string
          format: uuid
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        birthdate:
          type: string
          description: m/d/Y
        password:
          type: string
        active:
          type: integer
          format: int32
          description: User Status
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        created_at:
          type: string
        updated_at:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        program:
          description: the assigend program
          type: string
          format: uuid
        organization:
          description: the assigend organization
          type: string
          format: uuid
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    ParticipantRead:
      type: object
      properties:
        email_address:
          type: string
        unique_id:
          type: string
          format: uuid
        credit:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        birthdate:
          type: string
          description: YYYY-MM-DD
        active:
          type: integer
          format: int32
          description: User Status
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        created_at:
          type: string
        updated_at:
          type: string
        deactivated_at:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        program:
          description: the assigend program
          type: string
          format: uuid
        organization:
          description: the assigend organization
          type: string
          format: uuid
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    ParticipantSSO:
      type: object
      properties:
        token:
          type: string
        domain:
          type: string
        exchange:
          type: string
    ProgramList:
      type: object
      properties:
        unique_id:
          type: string
          format: uuid
        name:
          type: string
          description: the name of the program
        published:
          type: integer
          description: 1 is published, 0 is unpublished
        collect_ssn:
          type: integer
          description: 1 is on, 0 is off
        point:
          type: integer
          description: the value here is the ratio for 1USD
        phone:
          type: string
        url:
          type: string
          description: the subdomain of the program URL
        domain_id:
          type: integer
          format: int32
          description: the top level domain of the program URL
        created_at:
          type: string
        updated_at:
          type: string
        start_date:
          type: string
          format: date
          description: YYYY-MM-DD
        end_date:
          type: string
          description: YYYY-MM-DD H:i:s
        grace_period:
          type: integer
          description: The amount of days after end date, that the program is still active
        timezone:
          type: string
          description: >-
            Options: America/New_York, America/Chicago, America/Denver,
            America/Phoenix, America/Los_Angeles, America/Anchorage,
            America/Adak, Pacific/Honolulu
        organization:
          type: string
          format: uuid
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
        contact_reference:
          type: string
        accounting_contact_reference:
          type: string
        cost_center_id:
          type: string
        invoice_to:
          type: string
        deposit_amount:
          type: integer
        low_level_deposit:
          type: integer
        issue_1099:
          type: integer
          description: 1 is true 0 is false
        enable_email_login:
          type: integer
          default: 0
          description: >-
            1 is true 0 is false.  When enabled, this permits participants to
            login to the marketplace using their email address and password.
        employee_payroll_file:
          type: integer
          description: 1 is true 0 is false
        active:
          type: integer
          description: 1 is true 0 is false
        is_avs:
          type: integer
          description: >-
            When 1 then transactions created with shipping addresses will have
            thier shipping addresses verified before creating the transaction.
            Regardless of this setting, AVS is always enabled in marketplaces
            before causing a transaction.
    ProgramRead:
      type: object
      properties:
        unique_id:
          type: string
          format: uuid
        name:
          type: string
          description: the name of the program
        published:
          type: integer
          description: 1 is published, 0 is unpublished
        collect_ssn:
          type: integer
          description: 1 is on, 0 is off
        is_avs:
          type: integer
          description: >-
            When 1 then transactions created with shipping addresses will have
            thier shipping addresses verified before creating the transaction.
            When 0, address verification does not occur on the shipping address
            on the transaction model. Regardless of this setting, AVS is always
            enabled in marketplaces before causing a transaction.
        point:
          type: integer
          description: the value here is the ratio for 1USD
        phone:
          type: string
        url:
          type: string
          description: the subdomain of the program URL
        domain_id:
          type: integer
          format: int32
          description: the top level domain of the program URL
        created_at:
          type: string
        updated_at:
          type: string
        start_date:
          type: string
          format: date
          description: YYYY-MM-DD
        end_date:
          type: string
          description: YYYY-MM-DD H:i:s
        grace_period:
          type: integer
          description: The amount of days after end date, that the program is still active
        timezone:
          type: string
          description: >-
            Options: America/New_York, America/Chicago, America/Denver,
            America/Phoenix, America/Los_Angeles, America/Anchorage,
            America/Adak, Pacific/Honolulu
        organization:
          type: string
          format: uuid
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
        cost_center_id:
          type: string
        invoice_to:
          type: string
        deposit_amount:
          type: integer
        low_level_deposit:
          type: integer
        issue_1099:
          type: integer
          description: 1 is true 0 is false
        enable_email_login:
          type: integer
          default: 0
          description: >-
            1 is true 0 is false.  When enabled, this permits participants to
            login to the marketplace using their email address and password.
        employee_payroll_file:
          type: integer
          description: 1 is true 0 is false
        active:
          type: integer
          description: 1 is true 0 is false
        contact:
          type: object
          items:
            $ref: '#/components/schemas/Contact'
        accounting_contact:
          type: object
          items:
            $ref: '#/components/schemas/AccountingContact'
        productCriteria:
          type: object
          items:
            $ref: '#/components/schemas/ProductCriteria'
        featured_products:
          type: array
          items:
            $ref: '#/components/schemas/ProductSku'
        auto_redemption:
          type: object
          items:
            $ref: '#/components/schemas/AutoRedemption'
        one_time_auto_redemption:
          type: array
          items:
            $ref: '#/components/schemas/OneTimeAutoRedemption'
        program_types:
          type: array
          items:
            $ref: '#/components/schemas/ProgramType'
        actions:
          type: object
          items:
            $ref: '#/components/schemas/Actions'
    ProgramCreate:
      type: object
      required:
        - unique_id
        - name
        - point
        - organization
      properties:
        unique_id:
          type: string
          format: uuid
        name:
          type: string
          description: the name of the program
        point:
          type: integer
          description: the value here is the ratio for 1USD
        phone:
          type: string
        url:
          type: string
          description: Full domain (including subdomain)
        active:
          type: integer
        logo:
          type: string
          description: a data URI image
        organization:
          type: string
          format: uuid
        start_date:
          type: string
          format: date
          description: YYYY-MM-DD
        end_date:
          type: string
          description: YYYY-MM-DD H:i:s
        grace_period:
          type: integer
          description: The amount of days after end date, that the program is still active
        enable_email_login:
          type: integer
          default: 0
          description: >-
            0 = Disabled, 1 = enabled.  When enabled, this permits participants
            to login to the marketplace using their email address and password.
        timezone:
          type: string
          description: >-
            Options: America/New_York, America/Chicago, America/Denver,
            America/Phoenix, America/Los_Angeles, America/Anchorage,
            America/Adak, Pacific/Honolulu
    ProgramUpdate:
      type: object
      properties:
        name:
          type: string
          description: the name of the program
        point:
          type: integer
          description: the value here is the ratio for 1USD
        phone:
          type: string
        url:
          type: string
          description: Full domain (including subdomain)
        active:
          type: integer
        logo:
          type: string
          description: a data URI image
        organization:
          type: string
          format: uuid
        start_date:
          type: string
          format: date
          description: YYYY-MM-DD
        end_date:
          type: string
          description: YYYY-MM-DD H:i:s
        grace_period:
          type: integer
          description: The amount of days after end date, that the program is still active
        enable_email_login:
          type: integer
          default: 0
          description: >-
            1 is true 0 is false.  When enabled, this permits participants to
            login to the marketplace using their email address and password.
        timezone:
          type: string
          description: >-
            Options: America/New_York, America/Chicago, America/Denver,
            America/Phoenix, America/Los_Angeles, America/Anchorage,
            America/Adak, Pacific/Honolulu
    ProgramMetrics:
      description: Fetch simple program metrics.
      type: object
      properties:
        participant_total:
          description: Total number of active participants.
          type: integer
        transaction_total:
          type: integer
        adjustment_total:
          type: integer
    OrganizationList:
      type: object
      properties:
        unique_id:
          type: string
          format: uuid
          description: the unique identifier of the organization
        name:
          type: string
          description: the name of the organization
        industry_program:
          $ref: '#/components/schemas/IndustryProgramEnum'
        accounts_payable_contact_reference:
          description: null reference
          type: string
        company_contact_reference:
          description: Null reference.
          type: string
        id:
          description: null reference
          type: integer
        program_count:
          description: The quantity of programs configured under this account.
          type: integer
        active:
          type: integer
        parent:
          type: string
          format: uuid
        created_at:
          type: string
        updated_at:
          type: string
    OrganizationRead:
      type: object
      properties:
        unique_id:
          type: string
          format: uuid
          description: the unique identifier of the organization
        parent:
          type: string
          format: uuid
          description: the parent organization
        name:
          type: string
          description: the name of the organization
        created_at:
          type: string
        updated_at:
          type: string
        domains:
          type: array
          items:
            type: string
        industry_program:
          $ref: '#/components/schemas/IndustryProgramEnum'
        id:
          type: integer
        active:
          type: integer
          description: 1 for true 0 for false
        company_contact:
          $ref: '#/components/schemas/Contact'
        accounts_payable_contact:
          $ref: '#/components/schemas/AccountingContact'
    OrganizationCreate:
      type: object
      required:
        - unique_id
        - name
      properties:
        unique_id:
          type: string
          format: uuid
          description: the unique identifier of the organization
        parent:
          type: string
          format: uuid
          description: the parent organization
        name:
          type: string
          description: the name of the organization
        created_at:
          type: string
        updated_at:
          type: string
        domains:
          type: array
          items:
            type: string
        industry_program:
          $ref: '#/components/schemas/IndustryProgramEnum'
        id:
          type: integer
        active:
          type: integer
          description: 1 for true 0 for false
        company_contact:
          $ref: '#/components/schemas/Contact'
        accounts_payable_contact:
          $ref: '#/components/schemas/AccountingContact'
    OrganizationUpdate:
      type: object
      required:
        - unique_id
        - name
      properties:
        unique_id:
          type: string
          format: uuid
          description: the unique identifier of the organization
        parent:
          type: string
          format: uuid
          description: the parent organization
        name:
          type: string
          description: the name of the organization
        created_at:
          type: string
        updated_at:
          type: string
        domains:
          type: array
          items:
            type: string
        industry_program:
          $ref: '#/components/schemas/IndustryProgramEnum'
        id:
          type: integer
        active:
          type: integer
          description: 1 for true 0 for false
        company_contact:
          $ref: '#/components/schemas/Contact'
        accounts_payable_contact:
          $ref: '#/components/schemas/AccountingContact'
    WebhookCreate:
      allOf:
        - type: object
          properties:
            username:
              type: string
              description: Username to be used for basic authentication.
            password:
              type: string
              description: Password to be used for basic authentication.
            title:
              type: string
              description: Webhook Title
            url:
              type: string
              description: URL The webhook POSTS data to.
            event:
              type: string
              description: Which event is this webhook sending Transaction.create
            active:
              type: integer
              description: Is this webhook active?  0 = false, 1 = true
            immutable:
              type: integer
              description: Can this webhook be modified? 0 = false, 1 = true
            created_at:
              type: string
            updated_at:
              type: string
    WebhookRead:
      type: object
      properties:
        id:
          type: integer
          description: the unique identifier of the webhook
        title:
          type: string
          description: Webhook Title
        url:
          type: string
          description: URL The webhook POSTS data to.
        event:
          type: string
          description: Which event is this webhook sending Transaction.create
        active:
          type: integer
          description: Is this webhook active?  0 = false, 1 = true
        immutable:
          type: integer
          description: Can this webhook be modified? 0 = false, 1 = true
        created_at:
          type: string
        updated_at:
          type: string
    WebhookLogs:
      type: object
      properties:
        webhookLogs:
          type: array
          items:
            $ref: '#/components/schemas/WebhookLog'
    WebhookLog:
      type: object
      properties:
        _id:
          type: object
          properties:
            $oid:
              type: string
        request_time:
          type: object
        http_status:
          type: integer
          description: >-
            Most recent HTTP status response to webhook's last attempt at
            running.
        responses:
          type: array
          items:
            $ref: '#/components/schemas/httpResponse'
        request:
          $ref: '#/components/schemas/httpRequest'
    WebhookReplayResponse:
      type: object
      properties:
        http_status_code:
          type: integer
          description: The HTTP response of the server the webhook was replayed to.
    httpRequest:
      type: object
      properties:
        headers:
          type: object
        body:
          type: string
    httpResponse:
      allOf:
        - $ref: '#/components/schemas/httpRequest'
        - type: object
          properties:
            http_status:
              type: integer
    CreateTransaction:
      type: object
      properties:
        issue_points:
          type: boolean
          description: defaults to false
          default: false
        shipping:
          $ref: '#/components/schemas/Address'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductForTransaction'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        unique_id:
          type: string
          format: uuid
        wholesale:
          type: string
          format: float
        subtotal:
          type: string
          format: float
        total:
          type: string
          format: float
        email_address:
          type: string
        locale:
          $ref: '#/components/schemas/LanguageEnum'
        created_at:
          type: string
        updated_at:
          type: string
        points:
          type: string
          format: float
        shipping:
          $ref: '#/components/schemas/TransactionAddressRead'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
        products:
          type: array
          items:
            $ref: '#/components/schemas/TransactionProductRead'
        user:
          $ref: '#/components/schemas/ParticipantRead'
    Product:
      type: object
      properties:
        sku:
          type: string
        name:
          type: string
        description:
          type: string
        terms:
          type: string
        active:
          type: integer
          description: 1 for true 0 for false
        vendor:
          type: string
        vendor_product_id:
          type: string
        digital:
          type: integer
          description: 1 for true 0 for false
        category:
          type: object
          items:
            $ref: '#/components/schemas/Category'
        brand:
          type: object
          items:
            $ref: '#/components/schemas/Category'
        group:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        price_ranged:
          type: integer
          description: 1 for true 0 for false
        price_ranged_min:
          type: string
          format: float
        price_ranged_max:
          type: string
          format: float
        price_wholesale:
          type: string
          format: float
        price_retail:
          type: string
          format: float
        price_shipping:
          type: string
          format: float
        price_handling:
          type: string
          format: float
        price_total:
          type: string
          format: float
        source:
          type: string
        manage_inventory:
          type: integer
          description: 1 for true 0 for false
        inventory_count:
          type: integer
        tax_exempt:
          type: integer
          description: 1 for true 0 for false
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
    TransactionProductRead:
      type: object
      properties:
        name:
          type: string
        sku:
          type: string
        quantity:
          type: integer
          format: int32
        total:
          type: number
          format: float
        points:
          type: number
          format: float
        guid:
          type: string
          format: uuid
        reissue_date:
          type: string
          format: date
          description: YYYY-MM-DD
        returned:
          type: boolean
        var_amount:
          type: number
          format: float
        program_fee:
          type: number
          format: float
        terms_approved:
          type: integer
          description: 1 for true 0 for false
        is_digital:
          type: integer
          description: 1 for true 0 for false
        is_wallet_enabled:
          type: integer
          description: 1 for true 0 for false
    ProductForTransaction:
      type: object
      properties:
        sku:
          type: string
        quantity:
          type: integer
          format: int32
        amount:
          type: number
          description: Required IF ranged product
    Category:
      type: object
      properties:
        name:
          type: string
        unique_id:
          type: string
        id:
          type: integer
    ParticipantIdArray:
      type: object
      properties:
        participant_id:
          type: array
          items:
            type: string
          example:
            - UNIQUE_ID1
            - UNIQUE_ID2
            - UNIQUE_ID3
    Meta:
      type: object
      properties:
        key:
          type: string
    ProductSku:
      type: string
    Address:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        phone:
          type: string
        country:
          type: string
          description: Country ISO
    TransactionAddressRead:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        phone:
          type: string
        country:
          type: integer
          description: Country ISO
        country_code:
          type: string
          description: Country Abbrev
    PointRead:
      properties:
        id:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        type:
          type: string
          description: credit to add, debit to subtract
        reference:
          type: string
          description: Reference identifier for client internal use.
        description:
          type: string
          description: Description visible to the participant.
        created_at:
          type: string
        updated_at:
          type: string
        transaction_id:
          type: integer
        transaction_item_id:
          type: integer
        completed_at:
          type: string
          format: datetime
        activity:
          type: string
    PointWrite:
      type: object
      required:
        - amount
        - type
      properties:
        amount:
          type: integer
          format: int32
        type:
          type: string
          description: credit to add, debit to subtract
        reference:
          type: string
          description: Reference identifier for client use.
        completed_at:
          type: string
          description: >-
            YYYY-MM-DD Optional reference to the date a participant completed
            the activity to receive the points.  This can be used if the date
            the points are credited via the API is after the date the
            participant earned the points
        description:
          type: string
          description: Description visible to participant.
        activity:
          type: string
    PointUpdate:
      type: object
      properties:
        reference:
          type: string
          description: Reference identifier for client use.
        completed_at:
          type: string
          description: >-
            YYYY-MM-DD Optional reference to the date a participant completed
            the activity to receive the points.  This can be used if the date
            the points are credited via the API is after the date the
            participant earned the points
        description:
          type: string
          description: Description visible to participant.
    ReturnRead:
      type: object
      properties:
        id:
          type: integer
          format: int32
        notes:
          type: string
        complete:
          type: integer
          format: int32
          description: Return status
        created_at:
          type: string
        updated_at:
          type: string
        user:
          $ref: '#/components/schemas/ReturnUserRead'
        item:
          $ref: '#/components/schemas/ReturnItemRead'
        participant:
          $ref: '#/components/schemas/ParticipantRead'
    ReturnUserRead:
      type: object
      properties:
        email_address:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        active:
          type: integer
          format: int32
          description: User Status
        created_at:
          type: string
        updated_at:
          type: string
        access_level:
          type: integer
        password_updated_at:
          type: string
          format: date
          description: YYYY-MM-DD
    ReturnItemRead:
      type: object
      properties:
        transaction_id:
          type: integer
          format: int32
          description: The transaction id of item returned
        sku:
          type: string
        guid:
          type: string
          description: the GUID of return
          format: uuid
        name:
          type: string
        quantity:
          type: integer
          format: int32
          description: The quantity of item returned
        total:
          type: number
          description: Total USD value returned to participant.
        points:
          type: number
          description: Total POINTS value returned to participant.
    UserStatusEnum:
      type: string
      description: >-
        Acceptable User Statuses- "1" - "ACTIVE" "2" - "HOLD" //still active "3"
        - "INACTIVE" "4" - "CANCELLED" //sets inactive and zeros out points "5"
        - "DATADEL" //sets inactive and delete user pii
    IndustryProgramEnum:
      type: integer
      description: >-
        Acceptable Industry Programs- 1 - "Health_Wellness" 2 - "Channel_Sales"
        3 - "Employee_Recognition" 4 - "Consumer" 5 - "Market_Research" 6 -
        "Loyalty_Marketing" 7 - "Rebates"
    LanguageEnum:
      type: string
      enum:
        - en_US
        - es_US
      description: Acceptable Language options "en_US" - "English" "es_US" - "Spanish"
    CountryEnum:
      type: string
      description: Acceptable Countries
      enum:
        - US
        - CA
        - MX
        - ES
        - DE
        - IN
        - JP
        - KR
        - IT
        - MY
        - NL
        - BR
        - RU
        - CN
    Contact:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        email:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
          description: ex. NY
        zip:
          type: string
        id:
          type: integer
        reference_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      description: Program Contact
    AccountingContact:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        email:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
          description: ex. NY
        zip:
          type: string
        id:
          type: integer
        reference_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      description: Program Accounting Contact
    AutoRedemption:
      type: object
      properties:
        product_sku:
          type: string
        interval:
          type: integer
        schedule:
          type: string
        all_participant:
          type: integer
          description: 1 for true 0 for false
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        active:
          type: integer
          description: 1 for true 0 for false
        program_id:
          type: integer
    OneTimeAutoRedemption:
      type: object
      properties:
        product_sku:
          type: string
        interval:
          type: integer
        all_participant:
          type: integer
          description: 1 for true 0 for false
        id:
          type: integer
        redemption_date:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        active:
          type: integer
          description: 1 for true 0 for false
        program_id:
          type: string
    ProgramType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    Actions:
      type: object
      properties:
        autoRedemption:
          type: boolean
        product:
          type: boolean
        vendor:
          type: boolean
        layout:
          type: boolean
        sweepstake:
          type: boolean
        content:
          type: boolean
        offlineRedemption:
          type: boolean
        fileUpload:
          type: boolean
        redemptionCampaigns:
          type: boolean
        programParticipantConfig:
          type: boolean
    Price:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer
    Brand:
      type: object
      properties:
        unique_id:
          type: string
        name:
          type: string
        active:
          type: integer
          description: 1 for true 0 for false
    ProductCriteria:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        groups:
          type: array
          items:
            type: string
        exclude_products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        exclude_brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        exclude_vendors:
          type: array
          items:
            type: string
        featured_page_title:
          type: string
    BatchParticipant:
      type: object
      properties:
        organization:
          type: string
        program:
          type: string
        collection:
          type: array
          items:
            $ref: '#/components/schemas/UserWrite'
    BatchAdjustmentCollectionItem:
      type: object
      properties:
        participant:
          type: string
          description: Participant ID
      allOf:
        - $ref: '#/components/schemas/PointWrite'
    BatchAdjustment:
      type: object
      properties:
        organization:
          type: string
        program:
          type: string
        collection:
          type: array
          items:
            $ref: '#/components/schemas/BatchAdjustmentCollectionItem'
    BatchTransactionCollectionItem:
      type: object
      properties:
        participant:
          type: string
          description: Participant ID
      allOf:
        - $ref: '#/components/schemas/CreateTransaction'
    BatchTransaction:
      type: object
      properties:
        organization:
          type: string
        program:
          type: string
        collection:
          type: array
          items:
            $ref: '#/components/schemas/BatchTransactionCollectionItem'
